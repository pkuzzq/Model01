{
  "hash": "e81044fb5c8c5fb4ae5f726e84bf30c4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: matplotlib demo\n\n---\n\n::: {#bba5b5ec .cell execution_count=1}\n``` {}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 根据给定图像特性定义函数\n# 假设这些是标准的经济函数，我们通常有：\n# 输出 (Y) 是资本 (K) 的函数，有递减的回报\n# 储蓄是输出 (Y) 的一定比例（假设储蓄率是恒定的）\n# 折旧是资本 (K) 的线性函数\n\nK = np.linspace(0, 400, 400)  # 资本存量从 0 到 400\n\n# 输出函数（看起来像是立方根函数，我们假设 Y = c * K^(1/3)）\nc = 160 / (400 ** (1/3))  # 假设当资本存量是 400 时最大输出是 160\nY = c * K ** (1/3)\n\n# 储蓄函数（假设输出的恒定储蓄率是 1/4）\ns = 1/4  # 储蓄率\nS = s * Y  # 储蓄函数\n\n# 折旧函数（线性，接近 K=250 时与储蓄函数交叉）\n# 假设当 K=0 时折旧是 0，并找到它与储蓄交叉的点\ndep_rate = S[np.where(K >= 250)[0][0]] / 250\nD = dep_rate * K  # 折旧函数\n\n# 绘制函数图\nplt.figure(figsize=(10, 6))\nplt.plot(K, Y, label='output', color='red')\nplt.plot(K, S, label='saving', color='blue')\nplt.plot(K, D, label='depreciation', color='magenta')\n\nplt.xlabel('资本存量',fontname='SourceHanSerifSC-Medium')\nplt.ylabel('数值',fontname='SourceHanSerifSC-Medium')\nplt.title('经济函数',fontname='SourceHanSerifSC-Medium')\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n```\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\nfindfont: Font family 'SourceHanSerifSC-Medium' not found.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](matplotlib_files/figure-ipynb/cell-2-output-2.png){}\n:::\n:::\n\n\n---\njupyter:\n  kernelspec:\n    display_name: Python 3 (ipykernel)\n    language: python\n    name: python3\n---\n",
    "supporting": [
      "matplotlib_files/figure-ipynb"
    ],
    "filters": []
  }
}